import * as t from 'io-ts';
import { Ord } from 'fp-ts/lib/Ord';
export declare class SetFromArrayType<RT extends t.Any, A = any, O = A, I = t.mixed> extends t.Type<A, O, I> {
    readonly type: RT;
    readonly ordA: Ord<t.TypeOf<RT>>;
    readonly _tag: 'SetFromArrayType';
    constructor(name: string, is: SetFromArrayType<RT, A, O, I>['is'], validate: SetFromArrayType<RT, A, O, I>['validate'], serialize: SetFromArrayType<RT, A, O, I>['encode'], type: RT, ordA: Ord<t.TypeOf<RT>>);
}
export declare const createSetFromArray: <RT extends t.Type<A, O, t.mixed>, A = any, O = A>(type: RT, ordA: Ord<RT["_A"]>, name?: string) => SetFromArrayType<RT, Set<RT["_A"]>, RT["_O"][], t.mixed>;
