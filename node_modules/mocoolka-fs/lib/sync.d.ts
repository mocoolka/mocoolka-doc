/// <reference types="node" />
import * as fs from 'fs';
import { IO } from 'mocoolka-fp/lib/IO';
export declare const pathResolve: (root: string) => (sub: string) => string;
export declare const statSync: (path: string) => IO<fs.Stats & {
    path: string;
}>;
export declare const isSubPath: (parent: string, sub: string) => boolean;
export declare const readDirSync: (path: string) => IO<string[]>;
export declare const createDirNotExistSync: (path: string) => IO<void>;
export declare const directoryExistSync: (path: string) => IO<boolean>;
export declare const rmdirSync: (strPath: string) => IO<void>;
export declare const readFileAsStringSync: (fileName: string) => (path: string) => IO<string>;
export declare const readFileAsPlainStringSync: (path: string) => IO<string>;
export declare const writeFileWithStringSync: (filename: string, contents: string) => (path: string) => IO<void>;
export declare const fileExistSync: (path: string) => IO<boolean>;
export declare const unlinkSync: (fileName: string) => (rootPath: string) => IO<void>;
export declare const filesSync: (rootPath: string) => (name: string) => IO<string[]>;
export declare const directoryDepth: (strPath: string) => number;
export declare const getDirectoryName: (strPath: string) => string;
export declare const getFileName: (strPath: string) => string;
export declare const isFullPath: (strRoot: string, strPath: string) => boolean;
export declare const realPathSync: (strPath: string) => string;
export declare const unSymbolLinkSync: (strPath: string) => string | null;
