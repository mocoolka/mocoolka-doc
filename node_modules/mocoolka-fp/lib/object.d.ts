import { TManyPropertyName } from './TypeLevel';
import { get, has, mapKeys, mapValues, pick, pickBy, merge } from 'lodash';
export { get, has, mapKeys, mapValues, pick, pickBy, merge, };
import { ObjectDiff } from './TypeLevel';
export declare const moveAndFillRightObject: (a: {}) => {
    [key: string]: any;
};
export declare const withDefaults: <D extends {
    [k: string]: any;
}, A extends D>(defaults: D) => (props?: ObjectDiff<A, D>) => A;
export declare const withDefaultsF: <D extends object, A extends D, R>(defaults: D) => (C: (prop: A) => R) => (props: ObjectDiff<A, D>) => R;
export declare const _get: (a: TManyPropertyName) => (b: object) => any;
