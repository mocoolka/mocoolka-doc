import { TManyPropertyName } from './TypeLevel';
import * as c from './Compare';
/**
 * compare collection when propery type is boolean
 */
export declare const booleanObjectCompare: {
    eq: (properyName: TManyPropertyName) => (x: boolean) => (b: object) => boolean;
    not: (properyName: TManyPropertyName) => (x: boolean) => (b: object) => boolean;
};
/**
 * compare collection when propery type is array
 */
export declare const arrayObjectCompare: {
    contains_every: (properyName: TManyPropertyName) => (x: c.TRuntimeBasicType[]) => (b: object[]) => boolean;
    contains_some: (properyName: TManyPropertyName) => (x: c.TRuntimeBasicType[]) => (b: object[]) => boolean;
    contains: (properyName: TManyPropertyName) => (x: c.TRuntimeBasicType) => (b: object[]) => boolean;
};
/**
 * compare collection when propery type is string
 */
export declare const stringObjectCompare: {
    in: (properyName: TManyPropertyName) => (x: string[]) => (b: object) => boolean;
    notIn: (properyName: TManyPropertyName) => (x: string[]) => (b: object) => boolean;
    contains: (properyName: TManyPropertyName) => (x: string) => (b: object) => boolean;
    notContains: (properyName: TManyPropertyName) => (x: string) => (b: object) => boolean;
    startsWith: (properyName: TManyPropertyName) => (x: string) => (b: object) => boolean;
    endsWith: (properyName: TManyPropertyName) => (x: string) => (b: object) => boolean;
    notStartsWith: (properyName: TManyPropertyName) => (x: string) => (b: object) => boolean;
    notEndsWith: (properyName: TManyPropertyName) => (x: string) => (b: object) => boolean;
    eq: (properyName: TManyPropertyName) => (x: string) => (b: object) => boolean;
    not: (properyName: TManyPropertyName) => (x: string) => (b: object) => boolean;
    lt: (properyName: TManyPropertyName) => (x: string) => (b: object) => boolean;
    gt: (properyName: TManyPropertyName) => (x: string) => (b: object) => boolean;
    lte: (properyName: TManyPropertyName) => (x: string) => (b: object) => boolean;
    gte: (properyName: TManyPropertyName) => (x: string) => (b: object) => boolean;
};
/**
 * compare collection when propery type is number
 */
export declare const numberObjectCompare: {
    eq: (properyName: TManyPropertyName) => (x: number) => (b: object) => boolean;
    not: (properyName: TManyPropertyName) => (x: number) => (b: object) => boolean;
    lt: (properyName: TManyPropertyName) => (x: number) => (b: object) => boolean;
    gt: (properyName: TManyPropertyName) => (x: number) => (b: object) => boolean;
    lte: (properyName: TManyPropertyName) => (x: number) => (b: object) => boolean;
    gte: (properyName: TManyPropertyName) => (x: number) => (b: object) => boolean;
};
